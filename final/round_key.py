from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend

def custom_aes_decrypt(key, ciphertext, iv):
    # Ensure the key is either 16, 24, or 32 bytes long
    if len(key) not in [16, 24, 32]:
        raise ValueError("Invalid key length. Key must be 16, 24, or 32 bytes.")
    
    # Create the AES cipher with the same mode and IV as used in encryption
    cipher = Cipher(algorithms.AES(key), modes.CFB(iv), backend=12)
    decryptor = cipher.decryptor()

    # Decrypt the ciphertext
    plaintext = decryptor.update(ciphertext) + decryptor.finalize()
    return plaintext
hex_enc = "1E36672B2682A99C628A2B5C20B29DAECBE7F5D7D5219BE98D372788359FDCE80039E0AD4971D57D821C8F4CD9FB0A91B3DDF8EF55B41C53157FC89DF4A556F91F321F506769914BC84C187EBC541F7D12068A2664328BBD921DAC971943EF4443884B250C03A1D0B2C4C44F7369D30F8FAE60B5C4C5D065EE28ACB6289852B3687956C56000E594E932DC5AD06B5B443FBF6AA6DEDBD693A5E996C30724E089D38C2CD2171E9F49E40A87748D46A99BCB1D1176BFFAB0008AB32616698CED887FCCA000EF05CD8E4A60D731F26E123E80820A826CE57D45407042925EE7EAF22B74027D3B9474B4D08A1CAA6D6FA8308CB5FD1D3796CE6FD40DA3DCA8AC2C32E57C853F6E8CFBAA6812822E8DFB513A2FD0014D14EB8158DE539DA64EC73EF5EFF13AE16BBE057A99D1383026A3AD9E1E6E1BF3CAF7595D0ABCDEC7D361517117EE80850B60BC5AA0017397B5013776A836A438C3D1B7346BE762AF00C9D010FEA50E782BB8DBE0B0028260EA6836B5263E9CC49D9EDE81250F516120F78569581603F1777B3437D087CD8D5F613498FBEBB72F344D2563CD85EC51AA6A7DDCB3A6B584856746E40B3FB35F619DAC8133B310E2ACF406845C1DDC50AE257EE07AB9CE00E0B3B84F90FBFE53843BAAEB122179F197430C29041BF078651064FDA48DB8F91533FCFB3EACF17879B22D09E5ACE8146003CFF9BF7D6F6BEE74E6D75829511472B1C0BFEF44DE91EAD33EAB5BAAC869E95FDFB710A4ABB2BE2E4E31E86CF002FACD003E154FAB6990FC9A38BE2E672121BFB5074BEE4DAEB2D9240D2ACC92365693546D9340E3B5F1E8EAD86FA0AE1669A1EF28BC7CC7982752C381ABB9D576CB9E08754D7EE9E4F22F4D903FABF8CD9A781E918E23EB4F5A8FAB9D442BCB31AA81ECECCFEF4F39D6763842DB667CF05C9243E6528F4BF68A2365D6B8681FC4B0BE2AD4009AAA88CE36A8CA68D10000000000000000000000000000000000000000000000000000"

# Example usage
key = b'\xd0\xde\xc4\x11\x9d\x4b\x3f\x9c\x46\xbb\xef\xc7\x54\x21\x50\x2b'
iv  = b'\xd0\xef\x5a\xf4\x09\xcf\x5f\x35\x91\x94\x36\x7f\x89\x70\x99\xb1'   # 16-byte IV for the mode of operation

# hex_enc = "c55bf23292c7"
ciphertext = bytes.fromhex(hex_enc)  # Replace this with your actual ciphertext

plaintext = custom_aes_decrypt(key, ciphertext, iv)
print("Plaintext:", plaintext)
with open("conf.dec", "wb") as f:
    f.write(plaintext)